on:
  workflow_dispatch:
  push:
    tags:
      - '*'

name: release
jobs:
  release:
    runs-on: ubuntu-latest
    steps: 
      - name: Get-id
        id: get_id
        run: |
          RELEASE_LATEST="$(curl -IkLs -o /tmp/NUL -w %{url_effective} ${{ secrets.SOURCE_VERSION }} | grep -o "[^/]*$")"
          echo "ID=v${RELEASE_LATEST#v}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
        with:
         repository: ${{ secrets.SOURCE_REPOSITORY }}
         ref: ${{ steps.get_id.outputs.ID }}
      - name: Get-version
        id: get_version
        run: |
          #echo "VER=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          GOVER="$(curl -sLf 'https://golang.org/VERSION?m=text' | grep "go")"
          echo "GO_VERSION=${GOVER#go}" >> $GITHUB_OUTPUT
      - name: Setup-go
        uses: actions/setup-go@v4
        with:
          go-version: '${{ steps.get_version.outputs.GO_VERSION }}'
          check-latest: true
      - name: Get project dependencies
        run: go mod download
      - name: Release
        run: | 
          CGO_ENABLED=0 go build -o release -trimpath -ldflags "-s -w -buildid=" ./main
          zip -9vr release.zip release
      - name: Install minisign and sign
        run: |
          sudo apt-get -y install libsodium-dev
          git clone --depth 1 https://github.com/jedisct1/minisign.git
          cd minisign/src
          mkdir -p /tmp/bin
          cc -O2 -o /tmp/bin/minisign -D_GNU_SOURCE *.c -lsodium
          cd -
          /tmp/bin/minisign -v
          echo "${{ secrets.MINISIGN_SK }}" >> /tmp/minisign.key
          echo | /tmp/bin/minisign -s /tmp/minisign.key -Sm *.zip
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: ./release.zip*
          #tag: ${{ steps.get_version.outputs.VER }}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
